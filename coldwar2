import java.io.*;
import java.util.*;
import java.awt.*;

public class ColdWar2 {
   private static City[] usArray = new City[20];
   private static City[] ussrArray = new City[20];

   public static String turn(){
      Scanner request = new Scanner(System.in);
      System.out.println("What city would you like to nuke?");
      //System.out.println("For how many nukes you have type Nuke");
      String demand = request.next(); 
      return demand;
 
   }


   public static void main (String[] args)throws FileNotFoundException{
      Scanner input = new Scanner(System.in);
      File file = new File("cities.txt");
      input = new Scanner(file);
      int cityID;
   
      for (int i = 0; i < 40; i++){
         String data = input.nextLine();
         String[] split = data.split(",");
         String name = split[0];
         String population = split[1];
         int pop = Integer.valueOf(population);
         if(i < 20){
            ussrArray[i] = new City(name, pop);     
         }
         else if(i >= 20){
            int x = i - 20;
            usArray[x] = new City(name, pop);     
         }
       }
            //k++;
            
         // PRINT THE RULES OF THE GAME ONE TIME    
           
         // PRINT INSTRUCTIONS TO CHOOSE 10 USSR CITIES
           int foundCity = 0;
           String target;
           for (int i = 0; i < 2; i++){
             boolean found = false;
             //target dosent work with turn returning look at turn
             do {
               target = turn();
               for (cityID = 0; cityID < 20 ; cityID++) {
                  if (ussrArray[cityID].compareTo(target) == true){
                      found = true;
                      foundCity = cityID;
                  }
               }
             }
             while (found == false);
             ussrArray[foundCity].nuked();
             System.out.println(ussrArray[foundCity].getName() + " is dead");

             // print that you nuked ussrArray[cityID].getName();
           }
           // Print "Successfully destroyed 10 russian cities
           
           // PRINT INSTRUCTIONS TO CHOOSE 10 US CITIES
           for (int i = 0; i < 10; i++){
             boolean found = false;
             //target dosent work with turn returning look at turn
             do {
               target = turn();
               for (cityID = 0; cityID < 20 ; cityID++) {
                  if (usArray[cityID].compareTo(target) == true){
                      found = true;
                      foundCity = cityID;
                  }
               }
             }
             while (found == false);
             usArray[foundCity].nuked();
             System.out.println(usArray[foundCity].getName() + " is dead");
             // print that you nuked usArray[cityID].getName();
           }
           // Print "Successfully destroyed 10 us cities
             
           int ussrNukesLeft = 0;
           
           for (cityID = 0; cityID < 20; cityID++) {
                  ussrNukesLeft += ussrArray[cityID].getNukes();
           }
           
           int usNukesLeft = 0;
           
           for (cityID = 0; cityID < 20; cityID++) {
                  usNukesLeft += usArray[cityID].getNukes();
           }
           
          // Print results of game with usNukesLeft and ussrNukesLeft
          }
}           
           
         
      
   
   
     /*  try {
   			File fifle = new File("WarText.txt");
   			FileReader fileReader = new FileReader(fifle);
   			BufferedReader bufferedReader = new BufferedReader(fileReader);
   			StringBuffer stringBuffer = new StringBuffer();
   			String line;
   			while ((line = bufferedReader.readLine()) != null) {
   				stringBuffer.append(line);
   				stringBuffer.append("\n");
   			} 
   			fileReader.close();
   			System.out.println(stringBuffer.toString());
   		}  
      catch (IOException e) {
   		e.printStackTrace();
   	} 
   */
  // }
